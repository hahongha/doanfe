import React, { useState } from 'react';
import {
  Grid, Card, CardContent, Typography, Box,
  TextField
} from '@mui/material';
import {
  LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend, PieChart, Pie, Cell
} from 'recharts';

const COLORS = ['#4caf50', '#ff9800', '#f44336', '#1976d2'];

const serviceData = [
  { month: 'Th√°ng 1', income: 3000000, expenses: 2000000, profit: 1000000 },
  { month: 'Th√°ng 2', income: 3500000, expenses: 2200000, profit: 1300000 },
  { month: 'Th√°ng 3', income: 4000000, expenses: 2500000, profit: 1500000 },
  { month: 'Th√°ng 4', income: 5000000, expenses: 2800000, profit: 2200000 },
  { month: 'Th√°ng 5', income: 5500000, expenses: 3000000, profit: 2500000 },
];

const serviceUsage = [
  { name: 'ƒêi·ªán', value: 60 },
  { name: 'N∆∞·ªõc', value: 50 },
  { name: 'Internet', value: 40 },
  { name: 'R√°c', value: 30 },
];

const roomCount = [
  { name: 'Ph√≤ng ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª•', value: 80 },
  { name: 'Ph√≤ng ch∆∞a s·ª≠ d·ª•ng d·ªãch v·ª•', value: 20 },
];

const RoomServiceStats = () => {
  const [startDate, setStartDate] = useState('2025-01-01');
  const [endDate, setEndDate] = useState('2025-05-28');
  return (
    <Box sx={{ p: 2 }}>
      <Typography variant="h3" gutterBottom>
        üè† Th·ªëng k√™ d·ªãch v·ª• ph√≤ng
      </Typography>
    <Box my={4}>


        <Box mt={2} display="flex" gap={2}>
          <TextField
            label="T·ª´ ng√†y"
            type="date"
            value={startDate}
            onChange={(e) => setStartDate(e.target.value)}
            InputLabelProps={{ shrink: true }}
          />
          <TextField
            label="ƒê·∫øn ng√†y"
            type="date"
            value={endDate}
            onChange={(e) => setEndDate(e.target.value)}
            InputLabelProps={{ shrink: true }}
          />
        </Box>
      </Box>

      <Box marginBottom={4}>
          {/* T·ªïng doanh thu t·ª´ d·ªãch v·ª• */}
          <Grid item xs={12} md={6}>
          <Grid container spacing={2}>
            {[
              { label: 'T·ªïng doanh thu d·ªãch v·ª•', value: 25000000 },
              { label: 'Doanh thu trong th·ªùi gian n√†y', value: 5500000 },
            ].map((item, idx) => (
              <Grid item xs={12} sm={6} key={idx}>
                <Card>
                  <CardContent>
                    <Typography variant="subtitle1">{item.label}</Typography>
                    <Typography variant="h4" color="primary">
                      {item.value.toLocaleString()} VND
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
            ))}
          </Grid>
        </Grid>
      </Box>
      <Grid container spacing={3}>
        {/* Bi·ªÉu ƒë·ªì doanh thu d·ªãch v·ª• theo th√°ng */}
        <Grid item xs={12} md={6}>
          <Card>
            <CardContent>
              <Typography variant="h3" gutterBottom>
                üìà Doanh thu d·ªãch v·ª• theo th√°ng
              </Typography>
              <Typography variant="body2" gutterBottom color="text.secondary">
                Bi·ªÉu ƒë·ªì ƒë∆∞·ªùng th·ªÉ hi·ªán doanh thu d·ªãch v·ª• theo th√°ng.
              </Typography>
              <ResponsiveContainer width="100%" height={250}>
                <LineChart data={serviceData}>
                  <XAxis dataKey="month" />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Line type="monotone" dataKey="income" name="Doanh thu" stroke="#1976d2" strokeWidth={2} />
                  <Line type="monotone" dataKey="expenses" name="Chi ph√≠" stroke="#ff9800" strokeWidth={2} />
                  <Line type="monotone" dataKey="profit" name="L·ª£i nhu·∫≠n" stroke="#4caf50" strokeWidth={2} />
                </LineChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
        </Grid>

        {/* Bi·ªÉu ƒë·ªì s·ª≠ d·ª•ng d·ªãch v·ª• */}
        <Grid item xs={12} md={6}>
          <Card>
            <CardContent>
              <Typography variant="h3" gutterBottom>
                üîå T·ª∑ l·ªá ph√≤ng s·ª≠ d·ª•ng d·ªãch v·ª•
              </Typography>
              <Typography variant="body2" gutterBottom color="text.secondary">
                Bi·ªÉu ƒë·ªì tr√≤n th·ªÉ hi·ªán t·ª∑ l·ªá ph√≤ng s·ª≠ d·ª•ng c√°c d·ªãch v·ª• nh∆∞ ƒëi·ªán, n∆∞·ªõc, internet, r√°c.
              </Typography>
              <ResponsiveContainer width="100%" height={250}>
                <PieChart>
                  <Pie
                    data={serviceUsage}
                    cx="50%" cy="50%" outerRadius={80}
                    dataKey="value" label
                  >
                    {serviceUsage.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                    ))}
                  </Pie>
                  <Legend />
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
        </Grid>

        {/* Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng ph√≤ng s·ª≠ d·ª•ng d·ªãch v·ª• */}
        <Grid item xs={12} md={6}>
          <Card>
            <CardContent>
              <Typography variant="h3" gutterBottom>
                üè† T·ª∑ l·ªá ph√≤ng s·ª≠ d·ª•ng d·ªãch v·ª•
              </Typography>
              <Typography variant="body2" gutterBottom color="text.secondary">
                Bi·ªÉu ƒë·ªì tr√≤n th·ªÉ hi·ªán t·ª∑ l·ªá ph√≤ng c√≥ ho·∫∑c kh√¥ng s·ª≠ d·ª•ng c√°c d·ªãch v·ª•.
              </Typography>
              <ResponsiveContainer width="100%" height={250}>
                <PieChart>
                  <Pie
                    data={roomCount}
                    cx="50%" cy="50%" outerRadius={80}
                    dataKey="value" label
                  >
                    {roomCount.map((entry, index) => (
                      <Cell key={`cell-room-${index}`} fill={COLORS[index % COLORS.length]} />
                    ))}
                  </Pie>
                  <Legend />
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
        </Grid>
      </Grid>
    </Box>
  );
};

export default RoomServiceStats;
